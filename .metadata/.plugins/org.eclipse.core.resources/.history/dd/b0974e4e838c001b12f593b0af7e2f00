package com.example.demo.controller;

import java.util.List;
import java.util.NoSuchElementException;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.example.demo.model.Absensi;
import com.example.demo.model.AbsensiRowMapper;
import com.example.demo.model.Absensi;


/**
 * 
 * @author Jouzu
 * Menambahkan method controller untuk menampilkan mini web services berdasarkan tahun
 */
@RestController
@RequestMapping("/absensi")
public class AbsensiController {
	@Autowired
	JdbcTemplate jdbc;

	public List<Absensi> getAbsensi() {

		String sql = "Select * from absensi";

		List<Absensi> absensi = jdbc.query(sql, new AbsensiRowMapper());

		return absensi;

	}
	
	public List<Absensi> getNik(String nik) {

		String sql = "Select * from absensi where nik = '"+nik+"' ";

		List<Absensi> absensi = jdbc.query(sql, new AbsensiRowMapper());

		return absensi;

	}
	
	public List<Absensi> getStartYear(String start_year) {

		String sql = "Select * from absensi where year(start_year) = '"+start_year+"' ";

		List<Absensi> absensi = jdbc.query(sql, new AbsensiRowMapper());

		return absensi;

	}
	
	public List<Absensi> getEndYear(String end_year) {

		String sql = "Select * from absensi where year(end_year) = '"+end_year+"' ";

		List<Absensi> absensi = jdbc.query(sql, new AbsensiRowMapper());

		return absensi;

	}

	public int insertAbsensi(Absensi absensi) {
		System.out.println(absensi.getStart_date());
		return jdbc.update("insert into Absensi(id,nik,start_date,end_date) values (" + absensi.getId() + ",'"
				+ absensi.getNik() + "','" + absensi.getStart_date() + "','" + absensi.getEnd_date() + "')");

	}

	public int updateAbsensi(String nik, Absensi absensi) {

		return jdbc
				.update("UPDATE Absensi SET `nik`='" + absensi.getNik() + "', WHERE nik = '" + absensi.getNik() + "'");

	}

	public int deleteAbsensi(String nik) {
		return jdbc.update("DELETE FROM `Absensi` WHERE `nik` = '" + nik + "';");
	}

	@PostMapping("/")
	public String add(@RequestBody Absensi absensi) {
		if (this.insertAbsensi(absensi) == 1) {
			return "Insert data berhasil";
		} else {
			return "Insert data gagal";
		}
	}

	@DeleteMapping("/{nik}")
	public String delete(@PathVariable String nik) {
		if(this.deleteAbsensi(nik) == 1) {
			return "Berhasil Dihapus";
		}else {
			return "Data tidak ada";
		}
	}

	@GetMapping("")
	public List<Absensi> list() {
		return getAbsensi();
	}
	
	@GetMapping("/{nik}")
	public List<Absensi> cariNik(@PathVariable String nik) {
		  return getNik(nik);
	}
	
	//Tugas
	@GetMapping("/tahunawal/{start_year}")
	public List<Absensi> cariTahunAwal(@PathVariable String start_year) {
		  return getStartYear(start_year);
	}
	
	@GetMapping("/tahunakhir/{end_year}")
	public List<Absensi> cariTahunAkhir(@PathVariable String end_year) {
		  return getEndYear(end_year);
	}
	//
	
	@PutMapping("/{nik}")
	public ResponseEntity<?> update(@RequestBody Absensi Absensi, @PathVariable String nik) {
		try {
			updateAbsensi(nik, Absensi);
			return new ResponseEntity<>(HttpStatus.OK);
		} catch (NoSuchElementException e) {
			return new ResponseEntity<>(HttpStatus.NOT_FOUND);
		}

	}
}
